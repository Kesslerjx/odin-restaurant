(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),a=t.n(o),i=t(645),r=t.n(i)()(a());r.push([n.id,"body {\n    font-family: 'Roboto', sans-serif;\n    margin: 0;\n    padding: 0;\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n}\n\n#content {\n    flex-direction: column;\n    justify-content: center;\n}\n\nheader {\n    display: flex;\n    justify-content: space-between;\n    padding: 15px 30px;\n    flex-wrap: wrap;\n    gap: 15px;\n    position: sticky;\n    top: 0;\n    background-color: white;\n}\n\nfooter {\n    display: flex;\n    justify-content: center;\n    padding: 20px;\n    border-top: solid 1px black;\n}\n\n.header-title {\n    font-family: 'Square Peg', cursive;\n    font-size: 3.5rem;\n    padding: 0;\n    margin: 0;\n}\n\n.tab-buttons {\n    display: flex;\n    gap: 50px;\n    height: min-content;\n    align-self: center;\n}\n\n.tab-button {\n    font-family: inherit;\n    background: none;\n    border: none;\n    font-size: 1.2rem;\n    padding: 5px 15px;\n    border-radius: 10px;\n    text-align: center;\n}\n\nbutton:hover {\n    background: lightblue;\n    color: white;\n}\n\nbutton:active {\n    box-shadow: 0px 0px 5px rgb(0 0 0 / 0.7);\n}\n\n#home-content, #menu-content, #contact-content {\n    display: flex;\n    flex-direction: column;\n    padding: 50px 0;\n    gap: 75px;\n}\n\n.sub-headline {\n    font-size: 1.2rem;\n    font-weight: 300;\n    padding: 0 20%;\n    margin: 0;\n}\n\n.image-div {\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n    padding: 0 calc(100vw * 0.20 - 180px);\n}\n\n.image-div > img {\n    box-shadow: 0px 0px 5px rgb(0 0 0 / 0.5);\n    border-radius: calc(100vw * 0.06 - 54px);\n}\n\n.image-div > a, .menu-image-div > a {\n    margin-top: 10px;\n    font-size: 0.8rem;\n}\n\na:visited {\n    color: lightblue;\n}\n\n.menu-item {\n    display: flex;\n    padding: 0 10%;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n    gap: 10px;\n}\n\n.menu-item > p {\n    flex: 1;\n    min-width: 300px;\n    padding: 0 20px;\n    font-weight: 300;\n    font-size: clamp(1rem, 2vw, 1.5rem);\n    margin: 0;\n}\n\n.menu-image-div {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n    min-width: 300px;\n    flex: 0.8;\n}\n\n.menu-image {\n    width: 100%;\n    height: auto;\n    border-radius: 20px;\n    box-shadow: 0px 0px 5px rgb(0 0 0 / 0.5);\n}\n\n.contact-section {\n    display: flex;\n    flex-direction: column;\n    padding: 0 20%;\n    gap: 10px;\n}\n\n.contact-section p {\n    margin: 0;\n}\n\n.section-title {\n    font-size: 1.5rem;\n    font-weight: bold;\n}\n\n.section-text {\n    font-size: 1.1rem;\n}\n\n.contact-form {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    justify-content: center;\n}\n\n.contact-field {\n    padding: 5px;\n    border-radius: 5px;\n    border: solid;\n}\n\n.contact-form textarea {\n    padding: 5px;\n    font-family: inherit;\n    height: 5rem;\n    resize: vertical;\n    border-radius: 5px;\n    border: solid;\n}\n\n.contact-button {\n    background: lightblue;\n    font-size: 1.2rem;\n    padding: 10px 15px;\n    border-radius: 10px;\n    border: none;\n    text-align: center;\n}\n\n.contact-button:hover {\n    color: white;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,iCAAiC;IACjC,SAAS;IACT,UAAU;IACV,iBAAiB;IACjB,aAAa;IACb,sBAAsB;IACtB,8BAA8B;AAClC;;AAEA;IACI,sBAAsB;IACtB,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,kBAAkB;IAClB,eAAe;IACf,SAAS;IACT,gBAAgB;IAChB,MAAM;IACN,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,aAAa;IACb,2BAA2B;AAC/B;;AAEA;IACI,kCAAkC;IAClC,iBAAiB;IACjB,UAAU;IACV,SAAS;AACb;;AAEA;IACI,aAAa;IACb,SAAS;IACT,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;IACI,oBAAoB;IACpB,gBAAgB;IAChB,YAAY;IACZ,iBAAiB;IACjB,iBAAiB;IACjB,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,YAAY;AAChB;;AAEA;IACI,wCAAwC;AAC5C;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,eAAe;IACf,SAAS;AACb;;AAEA;IACI,iBAAiB;IACjB,gBAAgB;IAChB,cAAc;IACd,SAAS;AACb;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,kBAAkB;IAClB,qCAAqC;AACzC;;AAEA;IACI,wCAAwC;IACxC,wCAAwC;AAC5C;;AAEA;IACI,gBAAgB;IAChB,iBAAiB;AACrB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,cAAc;IACd,uBAAuB;IACvB,mBAAmB;IACnB,eAAe;IACf,SAAS;AACb;;AAEA;IACI,OAAO;IACP,gBAAgB;IAChB,eAAe;IACf,gBAAgB;IAChB,mCAAmC;IACnC,SAAS;AACb;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,kBAAkB;IAClB,gBAAgB;IAChB,SAAS;AACb;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,mBAAmB;IACnB,wCAAwC;AAC5C;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,cAAc;IACd,SAAS;AACb;;AAEA;IACI,SAAS;AACb;;AAEA;IACI,iBAAiB;IACjB,iBAAiB;AACrB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,uBAAuB;AAC3B;;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,aAAa;AACjB;;AAEA;IACI,YAAY;IACZ,oBAAoB;IACpB,YAAY;IACZ,gBAAgB;IAChB,kBAAkB;IAClB,aAAa;AACjB;;AAEA;IACI,qBAAqB;IACrB,iBAAiB;IACjB,kBAAkB;IAClB,mBAAmB;IACnB,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,YAAY;AAChB",sourcesContent:["body {\n    font-family: 'Roboto', sans-serif;\n    margin: 0;\n    padding: 0;\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n}\n\n#content {\n    flex-direction: column;\n    justify-content: center;\n}\n\nheader {\n    display: flex;\n    justify-content: space-between;\n    padding: 15px 30px;\n    flex-wrap: wrap;\n    gap: 15px;\n    position: sticky;\n    top: 0;\n    background-color: white;\n}\n\nfooter {\n    display: flex;\n    justify-content: center;\n    padding: 20px;\n    border-top: solid 1px black;\n}\n\n.header-title {\n    font-family: 'Square Peg', cursive;\n    font-size: 3.5rem;\n    padding: 0;\n    margin: 0;\n}\n\n.tab-buttons {\n    display: flex;\n    gap: 50px;\n    height: min-content;\n    align-self: center;\n}\n\n.tab-button {\n    font-family: inherit;\n    background: none;\n    border: none;\n    font-size: 1.2rem;\n    padding: 5px 15px;\n    border-radius: 10px;\n    text-align: center;\n}\n\nbutton:hover {\n    background: lightblue;\n    color: white;\n}\n\nbutton:active {\n    box-shadow: 0px 0px 5px rgb(0 0 0 / 0.7);\n}\n\n#home-content, #menu-content, #contact-content {\n    display: flex;\n    flex-direction: column;\n    padding: 50px 0;\n    gap: 75px;\n}\n\n.sub-headline {\n    font-size: 1.2rem;\n    font-weight: 300;\n    padding: 0 20%;\n    margin: 0;\n}\n\n.image-div {\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n    padding: 0 calc(100vw * 0.20 - 180px);\n}\n\n.image-div > img {\n    box-shadow: 0px 0px 5px rgb(0 0 0 / 0.5);\n    border-radius: calc(100vw * 0.06 - 54px);\n}\n\n.image-div > a, .menu-image-div > a {\n    margin-top: 10px;\n    font-size: 0.8rem;\n}\n\na:visited {\n    color: lightblue;\n}\n\n.menu-item {\n    display: flex;\n    padding: 0 10%;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n    gap: 10px;\n}\n\n.menu-item > p {\n    flex: 1;\n    min-width: 300px;\n    padding: 0 20px;\n    font-weight: 300;\n    font-size: clamp(1rem, 2vw, 1.5rem);\n    margin: 0;\n}\n\n.menu-image-div {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n    min-width: 300px;\n    flex: 0.8;\n}\n\n.menu-image {\n    width: 100%;\n    height: auto;\n    border-radius: 20px;\n    box-shadow: 0px 0px 5px rgb(0 0 0 / 0.5);\n}\n\n.contact-section {\n    display: flex;\n    flex-direction: column;\n    padding: 0 20%;\n    gap: 10px;\n}\n\n.contact-section p {\n    margin: 0;\n}\n\n.section-title {\n    font-size: 1.5rem;\n    font-weight: bold;\n}\n\n.section-text {\n    font-size: 1.1rem;\n}\n\n.contact-form {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    justify-content: center;\n}\n\n.contact-field {\n    padding: 5px;\n    border-radius: 5px;\n    border: solid;\n}\n\n.contact-form textarea {\n    padding: 5px;\n    font-family: inherit;\n    height: 5rem;\n    resize: vertical;\n    border-radius: 5px;\n    border: solid;\n}\n\n.contact-button {\n    background: lightblue;\n    font-size: 1.2rem;\n    padding: 10px 15px;\n    border-radius: 10px;\n    border: none;\n    text-align: center;\n}\n\n.contact-button:hover {\n    color: white;\n}"],sourceRoot:""}]);const c=r},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,a,i){"string"==typeof n&&(n=[[null,n,void 0]]);var r={};if(o)for(var c=0;c<this.length;c++){var A=this[c][0];null!=A&&(r[A]=!0)}for(var d=0;d<n.length;d++){var s=[].concat(n[d]);o&&r[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),a&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=a):s[4]="".concat(a)),e.push(s))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(a," */"),r=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(r).concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},r=[],c=0;c<n.length;c++){var A=n[c],d=o.base?A[0]+o.base:A[0],s=i[d]||0,l="".concat(d," ").concat(s);i[d]=s+1;var u=t(l),p={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var m=a(p,o);o.byIndex=c,e.splice(c,0,{identifier:l,updater:m,references:1})}r.push(l)}return r}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var i=o(n=n||[],a=a||{});return function(n){n=n||[];for(var r=0;r<i.length;r++){var c=t(i[r]);e[c].references--}for(var A=o(n,a),d=0;d<i.length;d++){var s=t(i[d]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}i=A}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var a=e[o];if(void 0!==a)return a.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),(()=>{var n=t(379),e=t.n(n),o=t(795),a=t.n(o),i=t(569),r=t.n(i),c=t(565),A=t.n(c),d=t(216),s=t.n(d),l=t(589),u=t.n(l),p=t(426),m={};m.styleTagTransform=u(),m.setAttributes=A(),m.insert=r().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=s(),e()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;const f=t.p+"89bf62e957a8496e7c1b.jpeg",g=t.p+"c9a9367ff92f022e1794.jpeg",C=t.p+"1965c8308d02e0aacb4e.jpeg",h=t.p+"929e286e1de2bcbf7596.jpeg",x=(n,e,t,o)=>({getImage:()=>n,getImageCredit:()=>e,getCreditText:()=>t,getText:()=>o}),b="menu",B="contact";let I=B,v=document.querySelector("body"),y=document.getElementById("content");function w(n){I="home-button"===n.target.id?"home":"menu-button"===n.target.id?b:B,E()}function E(){switch(function(){for(;y.firstChild;)y.removeChild(y.firstChild)}(),I){case b:y.appendChild((()=>{let n=document.createElement("div");return n.id="menu-content",[x(g,"https://www.pexels.com/@jjagtenberg/","@jjagtenberg","The Good Breakast. Have you some toast with eggs on top with a side of beans and cheese. Wake yourself up with some delicious coffee. You can't get a better breakfast anywhere else."),x(C,"https://www.pexels.com/@jonathanborba/","@jonathanborba","The Good Lunch. Wow, just look at that burger and fries. It looks delicious. I know you want to taste it. Maybe have a beer on the side. Guranteed best burger you'll ever have."),x(h,"https://www.pexels.com/@creative-vix/","@creative-vix","The Good Dinner. How about a fancy dinner? You could have some wine with whatever is in that bowl. Can you tell what it is, because I can't. Regardless, it looks kind of fancy.")].forEach((e=>{let t=document.createElement("div");t.classList.add("menu-item");let o=document.createElement("div");o.classList.add("menu-image-div");let a=document.createElement("img");a.src=e.getImage(),a.classList.add("menu-image");let i=document.createElement("a");i.href=e.getImageCredit(),i.target="_blank",i.textContent=e.getCreditText(),o.append(a,i);let r=document.createElement("p");r.textContent=e.getText(),t.append(o,r),n.append(t)})),n})());break;case B:y.appendChild((()=>{let n=document.createElement("div");return n.id="contact-content",n.append((()=>{let n=document.createElement("div"),e=document.createElement("p"),t=document.createElement("p"),o=document.createElement("p"),a=document.createElement("p");return e.textContent="Call",t.textContent="We'd love to hear from you! (not really)",o.textContent="555-555-5555",a.textContent="Tue - Sun | 8am - 9pm",n.classList.add("contact-section"),e.classList.add("section-title"),t.classList.add("section-text"),n.append(e,t,o,a),n})(),(()=>{let n=document.createElement("div"),e=document.createElement("p"),t=document.createElement("p"),o=document.createElement("form"),a=document.createElement("input"),i=document.createElement("input"),r=document.createElement("textarea"),c=document.createElement("input");return a.type="text",i.type="email",c.type="submit",a.name="user_name",i.name="user_email",r.name="user_message",e.textContent="Email",t.textContent=`Shoot us an email so we can have them automatically moved to the junk folder! ${String.fromCodePoint(10084)}`,a.placeholder="Name",i.placeholder="Email",r.placeholder="Your message here",c.value="Submit",n.classList.add("contact-section"),e.classList.add("section-title"),o.classList.add("contact-form"),c.classList.add("contact-button"),a.classList.add("contact-field"),i.classList.add("contact-field"),o.append(a,i,r,c),n.append(e,t,o),n})()),n})());break;default:y.appendChild((()=>{let n=document.createElement("div");n.id="home-content";let e=document.createElement("p");e.textContent="You know when you're hungry and think \"man I could use some good food right now.\" This restaurant is where you can get good food. That's why it's called The Good Stuff. You want the good stuff, we have the good stuff, come get the good stuff.",e.classList.add("sub-headline");let t=document.createElement("div");t.classList.add("image-div");let o=new Image;o.src=f;let a=document.createElement("a");return a.href="https://www.pexels.com/@igor-starkov-233202/",a.target="_blank",a.textContent="@igor-starkov",t.append(o,a),n.append(e,t),n})())}}v.prepend((()=>{let n=document.createElement("header"),e=document.createElement("p");e.classList.add("header-title"),e.textContent="The Good Stuff";let t=document.createElement("div");t.classList.add("tab-buttons");let o=document.createElement("button"),a=document.createElement("button"),i=document.createElement("button");return o.innerHTML="Home",o.id="home-button",o.classList.add("tab-button"),a.innerHTML="Menu",a.id="menu-button",a.classList.add("tab-button"),i.innerHTML="Contact",i.id="contact-button",i.classList.add("tab-button"),t.append(o,a,i),n.append(e,t),n})()),v.append((()=>{let n=document.createElement("footer"),e=document.createElement("a");return e.href="https://github.com/Kesslerjx",e.target="_blank",e.textContent="@kesslerjx",n.appendChild(e),n})()),function(){let n=document.getElementById("home-button"),e=document.getElementById("menu-button"),t=document.getElementById("contact-button");n.addEventListener("click",w),e.addEventListener("click",w),t.addEventListener("click",w)}(),E()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,